{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/InState/react/my-react-app/src/components/stateManagement/places/TravelPlan.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { initialTravelPlan } from './places.js';\nimport './places.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlaceTree({\n  id,\n  placesById\n}) {\n  const place = placesById[id];\n  const childIds = place.childIds;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [place.title, childIds.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: childIds.map(childId => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        id: childId,\n        placesById: placesById\n      }, childId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = PlaceTree;\nexport default function TravelPlan() {\n  _s();\n  const [plan, setPlan] = useState(initialTravelPlan);\n  const root = plan[0];\n  const planetIds = root.childIds;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Places to visit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: planetIds.map(id => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        id: id,\n        placesById: plan\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TravelPlan, \"IkiTm5lcPrCI/rlS/X1a+e/J8G4=\");\n_c2 = TravelPlan;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlaceTree\");\n$RefreshReg$(_c2, \"TravelPlan\");","map":{"version":3,"names":["useState","initialTravelPlan","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaceTree","id","placesById","place","childIds","children","title","length","map","childId","fileName","_jsxFileName","lineNumber","columnNumber","_c","TravelPlan","_s","plan","setPlan","root","planetIds","_c2","$RefreshReg$"],"sources":["/Users/jonnygold/Code/InState/react/my-react-app/src/components/stateManagement/places/TravelPlan.js"],"sourcesContent":["import { useState } from 'react';\nimport { initialTravelPlan } from './places.js';\nimport './places.css';\n\nfunction PlaceTree({ id, placesById }) {\n  const place = placesById[id];\n  const childIds = place.childIds;\n  return (\n    <li>\n      {place.title}\n      {childIds.length > 0 && (\n        <ol>\n          {childIds.map(childId => (\n            <PlaceTree\n              key={childId}\n              id={childId}\n              placesById={placesById}\n            />\n          ))}\n        </ol>\n      )}\n    </li>\n  );\n}\n\nexport default function TravelPlan() {\n  const [plan, setPlan] = useState(initialTravelPlan);\n  const root = plan[0];\n  const planetIds = root.childIds;\n  return (\n    <>\n      <h2>Places to visit</h2>\n      <ol>\n        {planetIds.map(id => (\n          <PlaceTree\n            key={id}\n            id={id}\n            placesById={plan}\n          />\n        ))}\n      </ol>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,iBAAiB,QAAQ,aAAa;AAC/C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,SAASC,SAASA,CAAC;EAAEC,EAAE;EAAEC;AAAW,CAAC,EAAE;EACrC,MAAMC,KAAK,GAAGD,UAAU,CAACD,EAAE,CAAC;EAC5B,MAAMG,QAAQ,GAAGD,KAAK,CAACC,QAAQ;EAC/B,oBACEP,OAAA;IAAAQ,QAAA,GACGF,KAAK,CAACG,KAAK,EACXF,QAAQ,CAACG,MAAM,GAAG,CAAC,iBAClBV,OAAA;MAAAQ,QAAA,EACGD,QAAQ,CAACI,GAAG,CAACC,OAAO,iBACnBZ,OAAA,CAACG,SAAS;QAERC,EAAE,EAAEQ,OAAQ;QACZP,UAAU,EAAEA;MAAW,GAFlBO,OAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET;AAACC,EAAA,GAnBQd,SAAS;AAqBlB,eAAe,SAASe,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAACC,iBAAiB,CAAC;EACnD,MAAMwB,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC;EACpB,MAAMG,SAAS,GAAGD,IAAI,CAACf,QAAQ;EAC/B,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhB,OAAA;MAAAQ,QAAA,EACGe,SAAS,CAACZ,GAAG,CAACP,EAAE,iBACfJ,OAAA,CAACG,SAAS;QAERC,EAAE,EAAEA,EAAG;QACPC,UAAU,EAAEe;MAAK,GAFZhB,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP;AAACG,EAAA,CAlBuBD,UAAU;AAAAM,GAAA,GAAVN,UAAU;AAAA,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}