{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/InState/react/my-react-app/src/components/fancyText/InspirationGenerator.js\",\n  _s = $RefreshSig$();\nimport inspirations from './Inspirations';\nimport FancyText from './FancyText';\nimport Color from './Color';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InspirationGenerator({\n  children\n}) {\n  _s();\n  const [index, setIndex] = React.useState(0);\n  const inspiration = inspirations[index];\n  const next = () => setIndex((index + 1) % inspirations.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your inspirational \", inspiration.type, \" is:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), inspiration.type === 'quote' ? /*#__PURE__*/_jsxDEV(FancyText, {\n      text: inspiration.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Color, {\n      value: inspiration.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: next,\n      children: \"Inspire me again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n}\n_s(InspirationGenerator, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c = InspirationGenerator;\nvar _c;\n$RefreshReg$(_c, \"InspirationGenerator\");","map":{"version":3,"names":["inspirations","FancyText","Color","jsxDEV","_jsxDEV","Fragment","_Fragment","InspirationGenerator","children","_s","index","setIndex","React","useState","inspiration","next","length","type","fileName","_jsxFileName","lineNumber","columnNumber","text","value","onClick","_c","$RefreshReg$"],"sources":["/Users/jonnygold/Code/InState/react/my-react-app/src/components/fancyText/InspirationGenerator.js"],"sourcesContent":["import inspirations from './Inspirations';\nimport FancyText from './FancyText';\nimport Color from './Color';\n\nexport default function InspirationGenerator({children}) {\n  const [index, setIndex] = React.useState(0);\n  const inspiration = inspirations[index];\n  const next = () => setIndex((index + 1) % inspirations.length);\n\n  return (\n    <>\n      <p>Your inspirational {inspiration.type} is:</p>\n      {inspiration.type === 'quote'\n      ? <FancyText text={inspiration.value} />\n      : <Color value={inspiration.value} />}\n\n      <button onClick={next}>Inspire me again</button>\n      {children}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,eAAe,SAASC,oBAAoBA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMC,WAAW,GAAGd,YAAY,CAACU,KAAK,CAAC;EACvC,MAAMK,IAAI,GAAGA,CAAA,KAAMJ,QAAQ,CAAC,CAACD,KAAK,GAAG,CAAC,IAAIV,YAAY,CAACgB,MAAM,CAAC;EAE9D,oBACEZ,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MAAAI,QAAA,GAAG,qBAAmB,EAACM,WAAW,CAACG,IAAI,EAAC,MAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC/CP,WAAW,CAACG,IAAI,KAAK,OAAO,gBAC3Bb,OAAA,CAACH,SAAS;MAACqB,IAAI,EAAER,WAAW,CAACS;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBACtCjB,OAAA,CAACF,KAAK;MAACqB,KAAK,EAAET,WAAW,CAACS;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErCjB,OAAA;MAAQoB,OAAO,EAAET,IAAK;MAAAP,QAAA,EAAC;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/Cb,QAAQ;EAAA,eACT,CAAC;AAEP;AAACC,EAAA,CAhBuBF,oBAAoB;AAAAkB,EAAA,GAApBlB,oBAAoB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}