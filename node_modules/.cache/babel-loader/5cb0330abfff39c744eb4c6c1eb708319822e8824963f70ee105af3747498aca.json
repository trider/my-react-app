{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/my-react-app/src/components/stateManagement/TasksContext/TaskApp.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport AddTask from './AddTask.js';\nimport TaskList from './TaskList.js';\nimport { TasksContext, TasksDispatchContext } from './TasksContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskApp4() {\n  _s();\n  const [tasks, dispatch] = useReducer(tasksReducer, initialTasks);\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: tasks,\n    children: /*#__PURE__*/_jsxDEV(TasksDispatchContext.Provider, {\n      value: dispatch,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Day off in Kyoto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskApp4, \"/WXoOWA8jcmGw6IJvQ6lpVQrnbs=\");\n_c = TaskApp4;\nfunction tasksReducer(tasks, action) {\n  switch (action.type) {\n    case 'added':\n      {\n        return [...tasks, {\n          id: action.id,\n          text: action.text,\n          done: false\n        }];\n      }\n    case 'changed':\n      {\n        return tasks.map(t => {\n          if (t.id === action.task.id) {\n            return action.task;\n          } else {\n            return t;\n          }\n        });\n      }\n    case 'deleted':\n      {\n        return tasks.filter(t => t.id !== action.id);\n      }\n    default:\n      {\n        throw Error('Unknown action: ' + action.type);\n      }\n  }\n}\nconst initialTasks = [{\n  id: 0,\n  text: 'Philosopher’s Path',\n  done: true\n}, {\n  id: 1,\n  text: 'Visit the temple',\n  done: false\n}, {\n  id: 2,\n  text: 'Drink matcha',\n  done: false\n}];\nvar _c;\n$RefreshReg$(_c, \"TaskApp4\");","map":{"version":3,"names":["useReducer","AddTask","TaskList","TasksContext","TasksDispatchContext","jsxDEV","_jsxDEV","TaskApp4","_s","tasks","dispatch","tasksReducer","initialTasks","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","type","id","text","done","map","t","task","filter","Error","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/my-react-app/src/components/stateManagement/TasksContext/TaskApp.js"],"sourcesContent":["import { useReducer } from 'react';\nimport AddTask from './AddTask.js';\nimport TaskList from './TaskList.js';\nimport { TasksContext, TasksDispatchContext } from './TasksContext.js';\n\nexport default function TaskApp4() {\n  const [tasks, dispatch] = useReducer(\n    tasksReducer,\n    initialTasks\n  );\n\n  return (\n    <TasksContext.Provider value={tasks}>\n      <TasksDispatchContext.Provider value={dispatch}>\n        <h1>Day off in Kyoto</h1>\n        <AddTask />\n        <TaskList />\n      </TasksDispatchContext.Provider>\n    </TasksContext.Provider>\n  );\n}\n\nfunction tasksReducer(tasks, action) {\n  switch (action.type) {\n    case 'added': {\n      return [...tasks, {\n        id: action.id,\n        text: action.text,\n        done: false\n      }];\n    }\n    case 'changed': {\n      return tasks.map(t => {\n        if (t.id === action.task.id) {\n          return action.task;\n        } else {\n          return t;\n        }\n      });\n    }\n    case 'deleted': {\n      return tasks.filter(t => t.id !== action.id);\n    }\n    default: {\n      throw Error('Unknown action: ' + action.type);\n    }\n  }\n}\n\nconst initialTasks = [\n  { id: 0, text: 'Philosopher’s Path', done: true },\n  { id: 1, text: 'Visit the temple', done: false },\n  { id: 2, text: 'Drink matcha', done: false }\n];\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,UAAU,CAClCW,YAAY,EACZC,YACF,CAAC;EAED,oBACEN,OAAA,CAACH,YAAY,CAACU,QAAQ;IAACC,KAAK,EAAEL,KAAM;IAAAM,QAAA,eAClCT,OAAA,CAACF,oBAAoB,CAACS,QAAQ;MAACC,KAAK,EAAEJ,QAAS;MAAAK,QAAA,gBAC7CT,OAAA;QAAAS,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBb,OAAA,CAACL,OAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXb,OAAA,CAACJ,QAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAE5B;AAACX,EAAA,CAfuBD,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AAiBhC,SAASI,YAAYA,CAACF,KAAK,EAAEY,MAAM,EAAE;EACnC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,OAAO;MAAE;QACZ,OAAO,CAAC,GAAGb,KAAK,EAAE;UAChBc,EAAE,EAAEF,MAAM,CAACE,EAAE;UACbC,IAAI,EAAEH,MAAM,CAACG,IAAI;UACjBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACA,KAAK,SAAS;MAAE;QACd,OAAOhB,KAAK,CAACiB,GAAG,CAACC,CAAC,IAAI;UACpB,IAAIA,CAAC,CAACJ,EAAE,KAAKF,MAAM,CAACO,IAAI,CAACL,EAAE,EAAE;YAC3B,OAAOF,MAAM,CAACO,IAAI;UACpB,CAAC,MAAM;YACL,OAAOD,CAAC;UACV;QACF,CAAC,CAAC;MACJ;IACA,KAAK,SAAS;MAAE;QACd,OAAOlB,KAAK,CAACoB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKF,MAAM,CAACE,EAAE,CAAC;MAC9C;IACA;MAAS;QACP,MAAMO,KAAK,CAAC,kBAAkB,GAAGT,MAAM,CAACC,IAAI,CAAC;MAC/C;EACF;AACF;AAEA,MAAMV,YAAY,GAAG,CACnB;EAAEW,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAM,CAAC,EAChD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAM,CAAC,CAC7C;AAAC,IAAAL,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}